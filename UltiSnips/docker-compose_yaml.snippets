snippet dc_service_debug "docker compose service - debug container for c/c++ packages" b
${1:debug}:
    image: morawskim/opensuse-debug:${2:15.0}
    volumes:
        - ./:/app
    cap_add:
        - SYS_PTRACE
    security_opt:
        - seccomp=unconfined
    stdin_open: true
    tty: true
    working_dir: /app
    command: /bin/bash
${0}
endsnippet

snippet dc_service_mysql "docker compose service - mysql" b
${1:mysql}:
    image: mysql:${2:5.6}
    restart: always
    volumes:
        - ./mysqldata:/var/lib/mysql
    environment:
        MYSQL_ROOT_PASSWORD: ${3:password}
        MYSQL_DATABASE: ${4:dbname}
        MYSQL_USER: $4
        MYSQL_PASSWORD: ${5:userpassword}
    ports:
        - "3307:3306"
${0}
endsnippet

snippet dc_service_registry "docker composer service - docker registry" b
${1:registry}:
    image: registry:2
    ports:
        - 5000:5000
    environment:
        REGISTRY_HTTP_TLS_CERTIFICATE: /registry/certs/domain.crt
        REGISTRY_HTTP_TLS_KEY: /registry/certs/domain.key
        REGISTRY_AUTH: htpasswd
        REGISTRY_AUTH_HTPASSWD_PATH: /registry/auth/htpasswd
        REGISTRY_AUTH_HTPASSWD_REALM: Registry realm
    volumes:
        - ./data:/var/lib/registry
        - ./certs:/registry/certs
        - ./auth:/registry/auth
${0}
endsnippet

snippet dc_service_rocketchat "docker composer service - rocketchat" b
${1:rocketchat}:
    image: rocketchat/rocket.chat:0.70.2
    restart: unless-stopped
    volumes:
        - ./uploads:/app/uploads
    environment:
        - PORT=3000
        - ROOT_URL=${2:${ROCKETCHAT_URL:-http://localhost:3000}}
        - MONGO_URL=mongodb://mongo:27017/rocketchat
        - MONGO_OPLOG_URL=mongodb://mongo:27017/local
        - MAIL_URL=smtp://smtp.email
#       - HTTP_PROXY=http://proxy.domain.com
#       - HTTPS_PROXY=http://proxy.domain.com
    depends_on:
        - mongo
    ports:
        - 3000:3000
    labels:
        traefik.backend: "rocketchat"
        traefik.frontend.rule: "Host:rocketchat.lvh.me"
        traefik.port: "3000"

mongo:
    image: mongo:3.2
    restart: unless-stopped
    volumes:
        - ./data/db:/data/db
        #- ./data/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
    labels:
        traefik.enable: "false"

# this container's job is just run the command to initialize the replica set.
# it will run the command and remove himself (it will not stay running)
mongo-init-replica:
    image: mongo:3.2
    command: >
        /bin/bash -c "
            sleep 5;
            mongo mongo/rocketchat --eval \"rs.initiate({ _id: 'rs0', members: [ { _id: 0, host: 'localhost:27017' } ]})\"
        "
    depends_on:
        - mongo
$0
endsnippet

