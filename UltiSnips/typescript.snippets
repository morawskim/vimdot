snippet ng-validator "angular custom validator class" b
import { AbstractControl, ValidatorFn } from '@angular/forms'

export class AppValidators {
  static ${1:startsWith}(${2:letter} : string) : ValidatorFn {
    return (control: AbstractControl) : {[key: string]: any} => {
      if (control.value && !control.value.startsWith(letter)) {
        return {
          $1: $2
        }
      }

     return null;
    }
  }
}
${0}
endsnippet

snippet decorator-method "typescript method decorator" b
export function ${1}(parameter:any) {
    return function(target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) {
        var originalMethod = descriptor.value;
        descriptor.value = function() {
            var context = this
            var args = arguments;
            ${0}
            return originalMethod.apply(context, args);
        };
        return descriptor;
    }
};
endsnippet
