snippet make_env "Include .env file in makefile" b
# Load .env file.
# You can get value with syntax \`\$(ENV_NAME)\`
include -.env
$0
endsnippet

snippet make_multiline "Static multi line data in makefile " b
# To display this variable use syntax \`echo "\$\$${1:LOREM}"\`
define $1
Similique magnam atque et maiores voluptatibus dolorem sed amet. Sint voluptatem
enim sequi atque suscipit praesentium voluptatem. Sequi animi id laboriosam quas
quam quidem asperiores.
Ducimus sapiente consequatur animi praesentium dicta et qui. Dolorum similique
nemo nisi eos.
Repellendus consectetur tempore minima voluptatem reprehenderit porro
voluptatem. Dignissimos totam nisi et tenetur ullam repellat unde repudiandae.
You can use \$(VAR_NAME) or \$(shell date)
endef
export $1
$0
endsnippet

snippet isDefined "Makefile - check if var is defined" b
ifndef ${1:VAR_NAME}
	$(error $1 is undefined)
endif
$0
endsnippet

snippet defaultValue "Makefile - variable default value" b
@$(eval ${1:VARIABLE} ?= '${2:defaultValue}')
@echo \$($1)
$0
endsnippet

snippet doctrineLoadFixtures "Makefile - doctrine load fixtures" b
SYMFONY = bin/console

## Build the DB, control the schema validity, load fixtures and check the migration status
load-fixtures:
	@$(SYMFONY) doctrine:cache:clear-metadata
	@$(SYMFONY) doctrine:database:create --if-not-exists
	@$(SYMFONY) doctrine:schema:drop --force
	@$(SYMFONY) doctrine:schema:create
	@$(SYMFONY) doctrine:schema:validate
	@$(SYMFONY) doctrine:fixtures:load --no-interaction
$0
endsnippet
